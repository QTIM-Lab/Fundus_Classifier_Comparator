install.packages("caret")
library(caret)
install.packages("quantreg")
library(caret)
install.packages("caret")
library(caret)
library(quantreg)
install.packages("quantreg")
install.packages("polycor", dependencies = FALSE)
set.seed(12345)
R <- matrix(0, 4, 4)
R[upper.tri(R)] <- runif(6)
diag(R) <- 1
View(R)
R <- cov2cor(t(R) %*% R)
round(R, 4)  # population correlations
data <- rmvnorm(1000, rep(0, 4), R)
round(cor(data), 4)
library(polycor)
install.packages("sfmisc", dependencies = FALSE)
install.packages("sfsmisc", dependencies = FALSE)
library(polycor)
data <- rmvnorm(1000, rep(0, 4), R)
round(cor(data), 4)
View(data)
View(data)
x1 <- data[,1]
x2 <- data[,2]
y1 <- cut(data[,3], c(-Inf, .75, Inf))
y2 <- cut(data[,4], c(-Inf, -1, .5, 1.5, Inf))
x1
yi
y1
data <- data.frame(x1, x2, y1, y2)
View(data)
hetcor(data)
hetcor(x1, x2, y1, y2, ML=TRUE)
library(tidyr)
library(ggplot2)
library(PlayerRatings)
library(plyr)
library(dplyr)
library(corrplot)
#setwd("~/Syncplicity/retinalImaging/website/Image-Comparator/data/recentResults/compare/set34")
setwd("~/Documents/retinalImaging/website/Image-Comparator/data/recentResults/compare/set34")
compareRes <- read.csv('set34_compare_rev3_forR.csv')
library(tidyr)
library(ggplot2)
library(irr)
library(plyr)
library(reshape2)
setwd("~/Documents/retinalImaging/website/Image-Comparator/data/recentResults/classify/set34")
classRes <- read.csv('34classify_forR_kappa.csv')
classRes$imageID <- factor(classRes$imageID)
experts <- c("imageID", "mike", "mikeS", "mikeR", "jim", "kelly", "kim", "phil", "paul")
expertClass<-classRes[experts]
classRes_long <- gather(expertClass, expert, measurement, mike:paul)
hetcor(expertClass$mike, expertClass$mikeS, expertClass$jim, expertClass$kelly, ML=TRUE)
setwd("~/Documents/retinalImaging/website/Image-Comparator/data/recentResults/compare/set34")
compareRes <- read.csv('set34_compare_rev3_forR.csv')
toKeep <- c("taskId","img0Id","img1Id","img0Name","img1Name","mike", "mikeS", "mikeR", "jim", "paul")
expertCompare<-compareRes[toKeep]
compareRes_long <- gather(compareRes, user, winner, jason:testuser4)
#compareRes_long <- gather(expertCompare, user, winner, mike:paul)
#write.csv(compareRes_long,file="34classify_long.csv",sep = ",")
users <-unique(compareRes_long$user)
hetcor(compareRes$mike, compareRes$mikeS, compareRes$jim, compareRes$kelly, ML=TRUE)
rm(list=ls())
rm(list=ls())
library(tidyr)
library(ggplot2)
library(irr)
library(plyr)
library(reshape2)
#setwd("~/Syncplicity/retinalImaging/website/Image-Comparator/data/recentResults/classify/set34")
setwd("~/Documents/retinalImaging/website/Image-Comparator/data/recentResults/classify/set34")
#classRes <- read.csv('34classify_forR.csv')
classRes <- read.csv('34classify_forR_kappa.csv')
classRes$imageID <- factor(classRes$imageID)
#classRes$imageName <- factor(classRes$imageName)
#experts <- c("imageName", "mike", "mikeS", "mikeR", "jim", "kelly", "kim", "phil", "paul")
experts <- c("imageID", "mike", "mikeS", "mikeR", "jim", "kelly", "kim", "phil", "paul")
expertClass<-classRes[experts]
classRes_long <- gather(expertClass, expert, measurement, mike:paul)
res.aov <- aov(lm(measurement ~expert+imageID, data =classRes_long))
#res.aov <- aov(lm(measurement ~expert+imageName, data =classRes_long))
res.aov
summary(res.aov)
TukeyHSD(res.aov, "expert", ordered = TRUE)
fit <- lm(measurement ~expert+imageName, data =classRes_long)
#fit <- lm(measurement ~expert+imageID, data =classRes_long)
summary(fit)
fit <- lm(measurement ~expert+imageID, data =classRes_long)
summary(fit)
rm(list=ls())
library(tidyr)
library(ggplot2)
library(irr)
library(plyr)
library(dplyr)
#setwd("~/Syncplicity/retinalImaging/website/Image-Comparator/data/recentResults/classify/set100")
setwd("~/Documents/retinalImaging/website/Image-Comparator/data/recentResults/classify/set100")
classRes <- read.csv('100classify_forR_final8_rev2.csv')
classRes$imageID <- factor(classRes$imageID)
experts <- c("imageID", "mike", "mikeS", "mikeR", "jim", "kelly", "kim", "phil", "paul")
expertClass<-classRes[experts]
classRes_long <- gather(expertClass, expert, measurement, mike:paul)
res.aov <- aov(lm(measurement ~expert+imageID, data =classRes_long))
res.aov
summary(res.aov)
fit <- lm(measurement ~expert+imageID, data =classRes_long)
summary(fit)
TukeyHSD(res.aov)
aov<-TukeyHSD(res.aov)
aov
TukeyHSD(res.aov, "expert", ordered = TRUE)
pred <- read.csv('pred_act.csv')
setwd("~/Documents/retinalImaging/website/Image-Comparator/data/recentResults/classify")
pred <- read.csv('pred_act.csv')
rm(list=ls())
library(tidyr)
library(ggplot2)
library(irr)
library(plyr)
library(dplyr)
#setwd("~/Syncplicity/retinalImaging/website/Image-Comparator/data/recentResults/classify/set100")
setwd("~/Documents/retinalImaging/website/Image-Comparator/data/recentResults/classify")
pred <- read.csv('pred_act.csv')
g<-ggplot(pred, aes(x=avg_34, y=pred_34)) + geom_point(shape=1)
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34)) + geom_point(shape=1)  +theme_bw()
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point()  +theme_bw()
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point() + scale_shape_manual(values=seq(0,15)) +theme_bw()
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point() + scale_shape_manual(values=seq(0,15)) +theme_bw()
g<- g+labs(x="average rating of 34 images",  y = "Predicted average")
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point(size=4) + scale_shape_manual(values=seq(0,15)) +theme_bw()
g<- g+labs(x="average rating of 34 images",  y = "Predicted average")
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point(size=4) + scale_shape_manual(values=seq(0,15)) +theme_bw()
g<- g+labs(x="average rating of 34 images",  y = "Predicted average")+title("gdg")
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point(size=4) + scale_shape_manual(values=seq(0,15)) +theme_bw()
g<- g+labs(x="average rating of 34 images",  y = "Predicted average"+title("gdg"))
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point(size=4) + scale_shape_manual(values=seq(0,15)) +theme_bw()
g<- g+labs(x="average rating of 34 images",  y = "Predicted average"+ title="gdg")
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point(size=4) + scale_shape_manual(values=seq(0,15)) +theme_bw()
g<- g+labs(x="average rating of 34 images",  y = "Predicted average", title="gdg")
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point(size=4) + scale_shape_manual(values=seq(0,15)) +theme_bw()
g<- g+labs(x="average rating of 34 images",  y = "Predicted average", title="Predicted versual actual average rating by expert on 34 images")
g
g<-ggplot(pred, aes(x=avg_34, y=pred_34, shape=expert)) + geom_point(size=4) + scale_shape_manual(values=seq(0,15)) +theme_bw()
g<- g+labs(x="average rating of 34 images",  y = "Predicted average", title="Predicted versual actual average rating by expert on dataset B")
g
g2<-ggplot(pred, aes(x=avg_100, y=pred_100, shape=expert)) + geom_point(size=4) + scale_shape_manual(values=seq(0,15)) +theme_bw()
g2<- g2+labs(x="average rating of 100 images",  y = "Predicted average", title="Predicted versual actual average rating by expert on dataset A")
g2
