{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to OPTIMEyes Open Source Ophthalmology Annotation App QTIM GitHub . Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Interactive shell for flask: docker compose exec -it flask bash flask shell then: from OPTIMEyes.auth_blueprint import load_user from OPTIMEyes.db import get_server # Get the database instance couch_server = get_server() db = couch_server['image_comparator'] user = load_user('user_bbearce') user.set_password(\"password\") user.save(db) Download Annotations: from OPTIMEyes.routes_blueprint import downloadAnnotations App=\"monaiSegmentation\" user = 'bbearce' list_name =f'test_data-monaiSegmentation-0' task_id = f\"{user}-{list_name}\" zip_path = f\"TMP/{user}-{list_name}.zip\" downloadAnnotations(App, task_id, cli=True, zip_path=zip_path) Purge DB: # DANGER sudo rm -rf /opt/couchdb/data/ sudo rm -rf /opt/couchdb/data/.delete sudo rm -rf /opt/couchdb/data/.share Load data TBD... SSL Self signed mkdir -p flask_server/certs/ openssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days 365 mv cert.pem flask_server/certs/ mv key.pem flask_server/certs/ Echo what ever domain name you entered to /etc/hosts . Ex: optimeyes.co echo \"0.0.0.0 optimeyes.co\" | sudo tee -a /etc/hosts Certbot (real purchased certs) certbot sudo snap install --classic certbot sudo ln -s /snap/bin/certbot /usr/bin/certbot sudo certbot certonly --standalone # When it expires in ~90 days sudo certbot renew You will get instructions on where it is on your machine. Copy to flask_server/certs folder. MonaiLabel docker compose exec -it monailabel bash monailabel start_server --app apps/monaibundle --studies datastore --conf bundles IntegrationBundle,SegformerBundle,MedSamBundle --conf zoo_source ngc Initialize MedSAM Bundle's model from huggingface: docker compose exec -it monailabel bash python from transformers import SamModel, SamProcessor import torch model = SamModel.from_pretrained(\"flaviagiammarino/medsam-vit-base\", local_files_only=False) torch.save(model.state_dict(), '/monailabel/apps/monaibundle/model/MedSamBundle/models/model.pt') torch.save(model.state_dict(), '/monailabel/apps/monaibundle/model/MedSamBundle/models/model_best.pt') # loaded_weights = torch.load('/monailabel/apps/monaibundle/model/MedSamBundle/models/model.pt', weights_only=True) # model.load_state_dict(loaded_weights)","title":"Welcome to OPTIMEyes"},{"location":"#welcome-to-optimeyes","text":"Open Source Ophthalmology Annotation App QTIM GitHub .","title":"Welcome to OPTIMEyes"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Interactive shell for flask: docker compose exec -it flask bash flask shell then: from OPTIMEyes.auth_blueprint import load_user from OPTIMEyes.db import get_server # Get the database instance couch_server = get_server() db = couch_server['image_comparator'] user = load_user('user_bbearce') user.set_password(\"password\") user.save(db) Download Annotations: from OPTIMEyes.routes_blueprint import downloadAnnotations App=\"monaiSegmentation\" user = 'bbearce' list_name =f'test_data-monaiSegmentation-0' task_id = f\"{user}-{list_name}\" zip_path = f\"TMP/{user}-{list_name}.zip\" downloadAnnotations(App, task_id, cli=True, zip_path=zip_path) Purge DB: # DANGER sudo rm -rf /opt/couchdb/data/ sudo rm -rf /opt/couchdb/data/.delete sudo rm -rf /opt/couchdb/data/.share","title":"Project layout"},{"location":"#load-data","text":"TBD...","title":"Load data"},{"location":"#ssl","text":"","title":"SSL"},{"location":"#self-signed","text":"mkdir -p flask_server/certs/ openssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days 365 mv cert.pem flask_server/certs/ mv key.pem flask_server/certs/ Echo what ever domain name you entered to /etc/hosts . Ex: optimeyes.co echo \"0.0.0.0 optimeyes.co\" | sudo tee -a /etc/hosts","title":"Self signed"},{"location":"#certbot-real-purchased-certs","text":"certbot sudo snap install --classic certbot sudo ln -s /snap/bin/certbot /usr/bin/certbot sudo certbot certonly --standalone # When it expires in ~90 days sudo certbot renew You will get instructions on where it is on your machine. Copy to flask_server/certs folder.","title":"Certbot (real purchased certs)"},{"location":"#monailabel","text":"docker compose exec -it monailabel bash monailabel start_server --app apps/monaibundle --studies datastore --conf bundles IntegrationBundle,SegformerBundle,MedSamBundle --conf zoo_source ngc Initialize MedSAM Bundle's model from huggingface: docker compose exec -it monailabel bash python from transformers import SamModel, SamProcessor import torch model = SamModel.from_pretrained(\"flaviagiammarino/medsam-vit-base\", local_files_only=False) torch.save(model.state_dict(), '/monailabel/apps/monaibundle/model/MedSamBundle/models/model.pt') torch.save(model.state_dict(), '/monailabel/apps/monaibundle/model/MedSamBundle/models/model_best.pt') # loaded_weights = torch.load('/monailabel/apps/monaibundle/model/MedSamBundle/models/model.pt', weights_only=True) # model.load_state_dict(loaded_weights)","title":"MonaiLabel"}]}