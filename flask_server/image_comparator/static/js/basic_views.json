{
  "_id": "_design/basic_views",
  "language": "javascript",
  "views": {
    "completed_tasks": {
      "map": "function(doc) {\n  if (doc.type === \"task\" && doc.completed === true) {\n    emit (doc.user, doc);\n  }\n}"
    },
    "count_image_docs": {
      "map": "function(doc) {\n  if (doc._attachments && doc._attachments.image)\n    emit (doc.id);\n}",
      "reduce": "_count(keys, vals, rereduce)"
    },
    "imageSet2ImageId": {
      "map": "function(doc) {\n  \n  if (doc.type === \"imageDoc\")\n    emit(doc.imageSetName, doc);\n}"
    },
    "imageSet2ImageId_deleteme": {
      "map": "function(doc) {\n  \n  if (doc.type === \"imageDoc\")\n    emit(doc.imageSetName, doc);\n}"
    },
    "image_classify_lists": {
      "map": "function(doc) {\n  if (doc.type===\"image_classify_list\")\n   emit(doc.list_name, doc);\n}"
    },
    "image_compare_lists": {
      "map": "function(doc) {\n  if (doc.type === \"image_compare_list\") {\n\n     emit(doc.list_name, doc);\n  }\n}"
    },
    "image_grid_lists": {
      "map": "function(doc) {\n  if (doc.type === \"image_grid_list\") {\n     emit(doc.list_name, doc);\n  }\n}"
    },
    "image_pair_lists": {
      "map": "function(doc) {\n  if (doc.type === \"image_pair_list\") {\n\n     emit(doc.list_name, doc);\n  }\n}"
    },
    "incomplete_classify_tasks": {
      "map": "function(doc) {\n  if (doc.type === \"task\" && doc.task_type=== \"classify\" && doc.completed === false) {\n    emit (doc.user, doc);\n  }\n}"
    },
    "incomplete_compare_tasks": {
      "map": "function(doc) {\n  if (doc.type === \"task\" && doc.task_type=== \"compare\" && doc.completed === false) {\n    emit (doc.user, doc);\n  }\n}"
    },
    "incomplete_grid_tasks": {
      "map": "function(doc) {\n  if (doc.type === \"task\" && doc.task_type=== \"grid\" && doc.completed === false) {\n    emit (doc.user, doc);\n  }\n}"
    },
    "incomplete_pair_tasks": {
      "map": "function(doc) {\n  if (doc.type === \"task\" && doc.task_type=== \"pair\" && doc.completed === false) {\n    emit (doc.user, doc);\n  }\n}"
    },
    "incomplete_tasks": {
      "map": "function(doc) {\n  if (doc.type === \"task\" && doc.completed === false) {\n    emit (doc.user, doc);\n  }\n}"
    },
    "resultsClassify": {
      "map": "function(doc) {\n  if (doc.type===\"classifyResult\")\n    emit(doc.user + \" - \" + doc.task_list_name + \" - \" + doc.task_idx, doc);\n}"
    },
    "resultsCompare": {
      "map": "function(doc) {if (doc.type===\"compareResult\")\n  emit(doc.user + \" - \" + doc.task_list_name + \" - \" + doc.task_idx, doc);\n}"
    },
    "resultsGrid": {
      "map": "function(doc) {\n  if (doc.type===\"gridResult\")\n    emit(doc.user + \" - \" + doc.task_list_name + \" - \" + doc.task_idx, doc);\n}"
    },
    "resultsPair": {
      "map": "function(doc) {\n  if (doc.type===\"pairResult\")\n    emit(doc.user + \" - \" + doc.task_list_name + \" - \" + doc.task_idx, doc);\n}"
    },
    "tasks": {
      "map": "function(doc) {\n  if (doc.type === \"task\") {\n    emit (doc.user, doc);\n  }\n}"
    },
    "users": {
      "map": "function(doc) {\n  if (doc.type===\"user\")\n    emit(doc.id, doc.username);\n}"
    }
  }
}
